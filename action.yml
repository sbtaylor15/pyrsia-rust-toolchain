name: 'Rust Toolchain'
description: 'Set the Rust Toolchain to a specific version'
inputs:
  components:  # id of input
    description: 'Extra components to install'
    required: false
    default: ''
  packages:
    description: 'Extra packages to install'
    required: false
    default: ''    
runs:
  using: "composite"
  steps:

    - name: Get Rust Version from Cargo.toml
      if: "${{ env.RUST_VERSION == '' }}"
      run: |
        set -e
        # Install toml to json cli 
        npm i -g toml-cli 
        echo "RUST_VERSION=$(cat Cargo.toml 2>/dev/null | toml | jq -r 'try(.package."rust-version") // try(.package."rust") // "stable"')" >> $GITHUB_ENV
        echo "PKG_VERSION=$(cat Cargo.toml 2>/dev/null | toml | jq -r '.package.version')" >> $GITHUB_ENV 
        # Clean older versions of rustfmt and cargo-fmt to prevent warnings
        rm -f /home/runner/.cargo/bin/rustfmt
        rm -f /home/runner/.cargo/bin/cargo-fmt
      shell: bash

    - if: runner.os != 'Windows'
      run: |
        : install rustup if needed
        if ! command -v rustup &> /dev/null ; then
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
          echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
        fi
      shell: bash

    - if: "${{ inputs.components == '' }}"
      name: Install Rust toolchain
      id: toolchain
      run: |
        rustup toolchain install ${{ env.RUST_VERSION }} 
        rustup default ${{ env.RUST_VERSION }}
      shell: bash

    - if: "${{ inputs.components != '' }}"
      name: Install Rust toolchain and components
      id: toolchain_components
      run: |
        rustup toolchain install ${{ env.RUST_VERSION }} --component ${{ inputs.components }} 
        rustup default ${{ env.RUST_VERSION }}
      shell: bash

    - name: Display Rust Version
      run: |
        rustc --version --verbose
        cargo --version --verbose
      shell: bash     

    - name: Install Protoc
      uses: sbtaylor15/setup-protoc@v1.1.3
      with:
        version: '3.x'
        repo-token: ${{ github.token }}

    - if: "${{ inputs.packages != '' }}"
      name: Install Additional Packages
      id: toolchain_packages
      run: |
        cargo install ${{ inputs.packages }}
      shell: bash
